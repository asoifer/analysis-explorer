<Window x:Class="Explorer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:graphsharp="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
		xmlns:zoom="clr-namespace:GraphSharp.Controls.Zoom;assembly=GraphSharp.Controls"
        xmlns:local="clr-namespace:Explorer"
        mc:Ignorable="d"
        Title="Analysis.NET Explorer"
		Background="{DynamicResource ControlBackground}"
		ResizeMode="CanResizeWithGrip">

	<Window.Resources>
		<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
		<local:UniversalValueConverter x:Key="UniversalValueConverter" />
		<local:BoolToGridLengthConverter x:Key="BoolToGridLengthConverter" />
		<local:BooleanAndConverter x:Key="BooleanAndConverter" />

		<local:MapReduceConverter x:Key="GridSplitterVisibilityConverter"
								  Map="{StaticResource BooleanAndConverter}"
								  Reduce="{StaticResource BooleanToVisibilityConverter}" />

		<SolidColorBrush x:Key="ControlBackground" Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}" />
		<SolidColorBrush x:Key="WorkspaceBackground" Color="{DynamicResource {x:Static SystemColors.AppWorkspaceColorKey}}" />

		<ResourceDictionary x:Key="MenuResources">
			<DataTemplate x:Key="SeparatorMenuTemplate">
				<Separator Style="{StaticResource {x:Static MenuItem.SeparatorStyleKey}}" />
			</DataTemplate>

			<Style TargetType="{x:Type MenuItem}">
				<Setter Property="Command" Value="{Binding}" />
				<Setter Property="Header" Value="{Binding Name}" />
				<Setter Property="InputGestureText" Value="{Binding ShortcutText}" />
			</Style>

			<local:MenuItemTemplateSelector x:Key="MenuItemTemplateSelector"
											SeparatorTemplate="{StaticResource SeparatorMenuTemplate}" />
		</ResourceDictionary>

		<ResourceDictionary x:Key="ToolBarResources">
			<DataTemplate x:Key="SeparatorToolBarTemplate">
				<Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
			</DataTemplate>

			<DataTemplate DataType="{x:Type local:UIDelegateCommand}">
				<Button Command="{Binding}"
						Content="{Binding DisplayName}"						
						Style="{DynamicResource ResourceKey={x:Static ToolBar.ButtonStyleKey}}" />
			</DataTemplate>

			<local:ToolBarItemTemplateSelector x:Key="ToolBarItemTemplateSelector"
											   SeparatorTemplate="{StaticResource SeparatorToolBarTemplate}" />
		</ResourceDictionary>

		<DataTemplate x:Key="ClosableTabItemTemplate">
			<StackPanel Orientation="Horizontal"
						Margin="0,3,0,0">
				<TextBlock Text="{Binding Kind}"
						   Margin="0,0,0,0"
						   FontWeight="Bold" />
				<ContentPresenter Content="{Binding Name}"
								  Margin="5,0,10,0"
								  VerticalAlignment="Center" />
				<Button Command="{Binding CloseCommand}"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						BorderThickness="0"
						Background="Transparent">
					<Image Source="Images\close.png"
						   VerticalAlignment="Center"
						   Width="12"
						   Height="12" />
				</Button>
			</StackPanel>
		</DataTemplate>

		<HierarchicalDataTemplate DataType="{x:Type local:ItemViewModelBase}"
								  ItemsSource="{Binding Childs}">
			<StackPanel Orientation="Horizontal">
				<Image Source="{Binding Icon}" Margin="2" />
				<ContentPresenter Content="{Binding Name}"
								  VerticalAlignment="Center"
								  Margin="2" />
				<StackPanel.Style>
					<Style TargetType="{x:Type StackPanel}">
						<Style.Triggers>
							<DataTrigger Binding="{Binding HasCommands}" Value="True">
								<Setter Property="ContextMenu">
									<Setter.Value>
										<ContextMenu ItemsSource="{Binding Commands}"
													 UsesItemContainerTemplate="True"
													 ItemContainerTemplateSelector="{DynamicResource MenuItemTemplateSelector}"
													 Resources="{StaticResource MenuResources}" />
									</Setter.Value>
								</Setter>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</StackPanel.Style>
				<!--<StackPanel.ContextMenu>
					<ContextMenu ItemsSource="{Binding Commands}"
								 UsesItemContainerTemplate="True"
								 ItemContainerTemplateSelector="{DynamicResource MenuTemplateSelector}"
								 Resources="{StaticResource MenuResources}" />
				</StackPanel.ContextMenu>-->
			</StackPanel>
		</HierarchicalDataTemplate>

		<Style x:Key="MethodBodyLabelStyle"
			   TargetType="{x:Type TextBlock}">
			<Setter Property="FontWeight" Value="Bold" />
			<Setter Property="Margin" Value="5" />
		</Style>

		<Style x:Key="MethodBodyTextStyle"
			   TargetType="{x:Type TextBox}">
			<Setter Property="IsReadOnly" Value="True" />
			<Setter Property="FontFamily" Value="Consolas" />
			<Setter Property="FontSize" Value="12" />
			<Setter Property="AutoWordSelection" Value="True" />
			<Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
			<Setter Property="VerticalScrollBarVisibility" Value="Auto" />
			<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		</Style>

		<TextBox x:Key="CodeControl" x:Shared="False"
				 Text="{Binding Text, Mode=OneWay}"
				 Style="{StaticResource MethodBodyTextStyle}" />

		<DockPanel x:Key="GraphControl" x:Shared="False">
			<local:WrapPanelLastChildFill DockPanel.Dock="Top"
										  Orientation="Horizontal"
										  LastChildFill="True">
				<TextBlock Text="Layout"
						   FontWeight="Bold"
						   Margin="5,0,5,5"
						   VerticalAlignment="Center" />
				
				<ComboBox ItemsSource="{Binding LayoutAlgorithmFactory.AlgorithmTypes, Source={x:Reference GraphLayout}}"
						  SelectedValue="{Binding LayoutType}"
						  Margin="0,0,0,5" />
			</local:WrapPanelLastChildFill>
			
			<zoom:ZoomControl Background="{StaticResource WorkspaceBackground}"
							  BorderThickness="1">
				<local:GraphLayout x:Name="GraphLayout"
								   Graph="{Binding Graph}"
								   LayoutAlgorithmType="{Binding LayoutType}"
								   OverlapRemovalAlgorithmType="FSA"
								   HighlightAlgorithmType="Simple" />
			</zoom:ZoomControl>
		</DockPanel>
		
		<DataTemplate DataType="{x:Type local:TextDocumentViewModel}">
			<Grid Background="{StaticResource ControlBackground}"
				  Margin="-1">
				<ContentPresenter Content="{StaticResource CodeControl}"
								  Margin="5" />
			</Grid>
		</DataTemplate>

		<DataTemplate DataType="{x:Type local:GraphDocumentViewModel}">
			<Grid Background="{StaticResource ControlBackground}"
				  Margin="-1">
				<ContentPresenter Content="{StaticResource GraphControl}"
								  Margin="5" />
			</Grid>
		</DataTemplate>

		<DataTemplate DataType="{x:Type local:MethodDocumentViewModel}">
			<DockPanel Background="{StaticResource ControlBackground}"
					   Margin="-1">
				<ItemsControl DockPanel.Dock="Top"
							  HorizontalAlignment="Stretch"
							  ItemsSource="{Binding Bodies}"
							  Margin="0,5,0,0">
					<ItemsControl.ItemTemplate>
						<DataTemplate DataType="{x:Type local:MethodBodyViewModel}">
							<CheckBox Content="{Binding Name}"
									  IsChecked="{Binding IsVisible}"
									  Margin="5" />
						</DataTemplate>
					</ItemsControl.ItemTemplate>
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<WrapPanel Orientation="Horizontal" />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
				</ItemsControl>
				<local:SplitContainer ItemsSource="{Binding VisibleBodies}"
									  Margin="5" />
			</DockPanel>
		</DataTemplate>

		<DataTemplate DataType="{x:Type local:MethodBodyViewModel}">
			<DockPanel>
				<TextBlock DockPanel.Dock="Top"
						   Text="{Binding Name}"
						   Style="{StaticResource MethodBodyLabelStyle}" />

				<ContentPresenter Content="{StaticResource CodeControl}" />
			</DockPanel>
		</DataTemplate>

		<DataTemplate DataType="{x:Type local:MethodGraphViewModel}">
			<DockPanel>
				<TextBlock DockPanel.Dock="Top"
						   Text="{Binding Name}"
						   Style="{StaticResource MethodBodyLabelStyle}" />
				
				<ContentPresenter Content="{StaticResource GraphControl}" />
			</DockPanel>
		</DataTemplate>

		<Style TargetType="{x:Type graphsharp:VertexControl}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type graphsharp:VertexControl}">
						<Border BorderBrush="Gray"
								Background="{Binding BackgroundColor, Converter={StaticResource UniversalValueConverter}}"
								BorderThickness="1"
								CornerRadius="5"
								Padding="6">
							<!--<Expander IsExpanded="True">
								<Expander.Header>
									<TextBlock Text="{Binding Header}"
											   FontWeight="Bold" />
								</Expander.Header>
								<ContentPresenter Content="{TemplateBinding Vertex}"
												  Margin="0,5,0,0" />
							</Expander>-->
							<ContentPresenter Content="{TemplateBinding Vertex}" />
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="{x:Type graphsharp:EdgeControl}">
			<Setter Property="Foreground" Value="Gray" />
			<Setter Property="Fill" Value="Gray" />
			<Setter Property="StrokeThickness" Value="1" />
		</Style>

		<DataTemplate DataType="{x:Type local:VertexViewModelBase}">
			<TextBox Text="{Binding Label, Mode=OneWay}"
					 BorderThickness="0"
					 Background="Transparent"
					 Style="{StaticResource MethodBodyTextStyle}" />
		</DataTemplate>

		<DataTemplate DataType="{x:Type local:EdgeViewModelBase}">
			<TextBlock Text="{Binding Label}"
					   Foreground="Black"
					   FontFamily="Consolas"
					   FontSize="12" />
		</DataTemplate>
	</Window.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" MinWidth="100" />
			<ColumnDefinition Width="5" />
			<ColumnDefinition Width="3*" MinWidth="100"/>
		</Grid.ColumnDefinitions>

		<Menu Grid.Column="0"
			  Grid.ColumnSpan="3"
			  Grid.Row="0"
			  Background="Transparent">
			<MenuItem Header="_File"
					  ItemsSource="{Binding FileCommands}"
					  UsesItemContainerTemplate="True"
					  ItemContainerTemplateSelector="{DynamicResource MenuItemTemplateSelector}"
					  Resources="{StaticResource MenuResources}" />
		</Menu>

		<ToolBarTray Grid.Column="0"
					 Grid.ColumnSpan="3"
					 Grid.Row="1"
					 IsLocked="True"
					 Background="Transparent">
			<ToolBar Background="Transparent"
					 ItemsSource="{Binding ToolBarCommands}"
					 ItemTemplateSelector="{DynamicResource ToolBarItemTemplateSelector}"
					 Resources="{StaticResource ToolBarResources}" />
			<!--<ToolBar Background="Transparent"
					 Visibility="{Binding ActiveItem.HasCommands, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
					 ItemsSource="{Binding ActiveItem.Commands}"
					 ItemTemplateSelector="{DynamicResource ToolBarItemTemplateSelector}"
					 Resources="{StaticResource ToolBarResources}" />-->
		</ToolBarTray>

		<TreeView Grid.Column="0"
				  Grid.Row="2"
				  ItemsSource="{Binding Assemblies}"
				  local:TreeViewHelper.SelectedItem="{Binding ActiveItem, Mode=TwoWay}" />

		<GridSplitter Grid.Column="1"
					  Grid.Row="2"
					  HorizontalAlignment="Stretch"
					  Background="Transparent" />

		<TabControl Grid.Column="2"
					Grid.Row="2"
					BorderThickness="0"
					ItemsSource="{Binding Documents}"
					ItemTemplate="{StaticResource ClosableTabItemTemplate}"
					Background="{StaticResource WorkspaceBackground}"
					SelectedItem="{Binding ActiveDocument}" />

		<StatusBar Grid.Column="0"
				   Grid.ColumnSpan="3"
				   Grid.Row="3"
				   Background="Transparent">
			<StatusBarItem Content="Ready" />
		</StatusBar>
	</Grid>
</Window>
